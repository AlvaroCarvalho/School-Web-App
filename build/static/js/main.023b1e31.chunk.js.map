{"version":3,"sources":["assets/img/logo.webp","assets/img/load.gif","components/WhiteCard.js","components/InputContainer.js","components/Button.js","services/api.js","functions/validateFields.js","components/Loading.js","functions/Message.js","components/History.js","components/BaseUrl.js","pages/Login/index.js","components/Menu.js","components/PageTitle.js","components/List.js","components/UsersList.js","pages/Users/index.js","components/SubjectSelect.js","components/TeacherSelect.js","components/ClassroomSelect.js","components/StudentSelect.js","components/ClassesList.js","pages/Classes/index.js","functions/minutesToTime.js","components/StudentList.js","pages/Students/index.js","components/TeachersList.js","pages/Teachers/index.js","components/Modal.js","pages/MyClasses/index.js","components/PrivateRouter.js","components/Logout.js","functions/formatDate.js","pages/Finances/index.js","pages/Finances/TeacherFinances.js","Routes.js","App.js","index.js"],"names":["module","exports","WhiteCard","props","classes","extraClasses","className","children","InputContainer","Button","onClick","e","preventDefault","Action","text","Api","Axios","create","baseURL","timeout","headers","validateFields","obj","isValidated","Object","keys","map","Loading","src","LoadingIcon","alt","Message","status","response","message","History","createBrowserHistory","publicPath","BaseUrl","home","dashboard","students","teachers","users","myClasses","logout","finances","teacherFinances","Login","useState","user","password","userData","setUserData","setMessage","Logo","type","placeholder","value","onChange","target","userHandler","passwordHandler","a","async","body","JSON","stringify","post","res","data","length","window","localStorage","setItem","id","first_name","last_name","username","push","Menu","isVisible","setIsVisible","document","querySelector","classList","menuButton","contains","remove","add","getItem","userType","parseInt","to","renderMenu","PageTitle","title","List","UsersList","setUsers","useEffect","get","getUsers","el","key","renderUserType","Users","nameHandler","lastNameHandler","typeHandler","userNameHandler","displayMessage","SubjectSelect","change","subjects","name","renderSubjects","TeacherSelect","renderTeachers","ClassroomSelect","classrooms","renderClassrooms","StudentSelect","renderStudents","ClassesList","updateStatus","select","parentNode","renderClasses","classroom","filter","student","find","teacher","subject","time","duration","renderStatusSelect","Dashboard","setStudents","setTeachers","setClassrooms","setSubjects","firstClassData","schedule","setClassData","getStudents","getTeachers","getClassrooms","getSubjects","currentDate","setCurrentDate","setClasses","classData","setClassroom","newClassroomMessage","setNewClassroomMessage","selectedDateHandler","studentHandler","subjectHandler","teacherHandler","classroomHandler","statusHandler","scheduleHandler","timeHandler","durationHandler","newClassroomHandler","minutesToTime","minutes","h","Math","floor","m","StudentList","email","cellphone","credits","Students","newUserMessage","setNewUserMessage","setStudent","activeStudent","setActiveStudent","setCredits","addCreditsMessage","setAddCreditsMessage","firstNameHandler","emailHandler","cellphoneHandler","currentStudent","min","creditsHandler","TeachersList","getTeachersList","list","Teachers","setTeacherData","teacherData","newTeacherMessage","setNewTeacherMessage","newSubjectMessage","setNewSubjectMessage","setSubject","Modal","MyClasses","getClasses","date","isModalVisible","setIsModalVisible","currentClass","setCurrentClass","teacherComment","setTeacherComment","studentComment","setStudentComment","commentMessage","setCommentMessage","student_comments","teacher_comments","sendComment","comment","Date","classroom_name","toLocaleDateString","c","style","color","modalScreen","defaultValue","showModal","PrivateRoute","level","path","component","Logout","clear","formatDate","d","split","Finances","from","setFrom","setTo","incomes","setIncomes","outcomes","setOutcomes","totalIncomes","setTotalIncomes","totalOutcomes","setTotalOutcomes","getIncomes","getOutcomes","getTotalIncomes","total","getTotalOutcomes","setPaymentData","paymentData","setOutcome","outcome","paymentMessage","setPaymentMessage","responsible","income_date","method","amount","outcomeMessage","setOutcomeMessage","hours","payment_date","replace","listOfIncomes","i","renderIncomes","listOfOutcomes","renderOutcomes","responsibleHandler","incomeDateHandler","methodHandler","step","parseFloat","amountHandler","paidTeacherHandler","paidHoursHandler","paymentDateHandler","paidAmountHandler","TeacherFinances","payments","setPayments","setTotal","getPayments","getPaymentsTotal","listOfPayments","p","renderPayments","Routes","history","exact","Classes","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.023b1e31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4254f227.webp\";","module.exports = __webpack_public_path__ + \"static/media/load.84b69321.gif\";","import React from 'react';\n\nconst WhiteCard = props => {\n    \n    const classes = props.extraClasses ? props.extraClasses : '';\n\n    return(\n        <div className = {'white-card ' + classes}>\n            {props.children}\n        </div>\n    );\n}\nexport default WhiteCard;\n","import React from 'react';\n\nconst InputContainer = props => <label className='input-container'>{props.children}</label>;\n\nexport default InputContainer;\n","import React from 'react';\nimport InputContainer from './InputContainer';\n\nconst Button = props => {    \n\n    const doAction = e => {\n        e.preventDefault();\n        \n        if (props.Action) {\n            props.Action();\n        }\n    };\n\n    return(\n        <InputContainer>\n            <button className='button button--send' onClick={doAction}>\n                {props.text}\n            </button>\n        </InputContainer>\n    );\n}\n\nexport default Button;\n","import Axios from 'axios';\n\nconst Api = Axios.create({\n    baseURL: 'https://development.davimanoel.com.br/school-web-app/api', //'http://localhost:8080/school-web-app/api'\n    timeout: 10000,\n    headers: {'accept': 'application/json'}\n});\n\nexport default Api;\n","const validateFields = obj => {\n    let isValidated = true;\n    let keys = Object.keys(obj);\n\n    keys.map(e => {\n        if (obj[e] === '')\n            isValidated = false;\n    });\n\n    return isValidated;\n}\n\nexport default validateFields;\n","import React from 'react';\nimport LoadingIcon from '../assets/img/load.gif';\n\nconst Loading = () => <img src={LoadingIcon} className='loading' alt='Loading Icon'/>;\n\nexport default Loading;\n","import React from 'react';\n\nconst Message = (status, message = 'Preencha os campos necessários!') => {\n    let response;\n    \n    switch (status) {\n        case 'success':\n            response = <p className='message message--success'>A operação foi realizada com sucesso!</p>\n        break;\n        case 'warning':\n            response = <p className='message message--warning'>{message}</p>\n        break;\n        case 'error':\n            response = <p className='message message--error'>Houve um erro ao realizar a operação.</p>\n        break;\n        default:\n            response = <p></p>\n        break;\n    }\n\n    return response\n};\n\nexport default Message;\n","import { createBrowserHistory } from 'history';\n\nconst History = createBrowserHistory()\n\nexport default History;\n","const publicPath = '/school-web-app/'\n\nconst BaseUrl = {\n    home: publicPath,\n    dashboard: `${publicPath}dashboard`,\n    classes: `${publicPath}aulas`,\n    students: `${publicPath}alunos`,\n    teachers: `${publicPath}professores`,\n    users: `${publicPath}usuarios`,\n    myClasses: `${publicPath}minhas-aulas`,\n    logout: `${publicPath}logout`,\n    finances: `${publicPath}financeiro`,\n    teacherFinances: `${publicPath}financas`\n}\n\nexport default BaseUrl\n","import React, { useState } from 'react';\nimport WhiteCard from '../../components/WhiteCard';\nimport InputContainer from '../../components/InputContainer';\nimport Button from '../../components/Button';\nimport Logo from '../../assets/img/logo.webp';\nimport Api from '../../services/api';\nimport validateFields from '../../functions/validateFields';\nimport Loading from '../../components/Loading';\nimport Message from '../../functions/Message';\nimport History from '../../components/History';\nimport BaseUrl from '../../components/BaseUrl';\n\nconst Login = () => {\n\n    const [userData, setUserData] = useState({user: '', password: ''});\n    const [message, setMessage] = useState('');\n\n    const userHandler = e => {\n        setUserData({user: e.target.value, password: userData.password});\n    }\n\n    const passwordHandler = e => {\n        setUserData({user: userData.user, password: e.target.value});\n    };\n\n    const sendUserData = async () => {\n        const body = JSON.stringify(userData);\n                \n        if (validateFields(userData)) {\n            setMessage(<Loading />)\n\n            try {\n                const res = await Api.post('/login', body);\n                if (res.data.user.length) {\n                    const user = res.data.user[0]\n                    window.localStorage.setItem('user-id', user.id)\n                    window.localStorage.setItem('user-name', `${user.first_name} ${user.last_name}`)\n                    window.localStorage.setItem('user-type', user.type)\n                    window.localStorage.setItem('user-username', user.username)\n                    History.push(BaseUrl.dashboard)\n                } else {\n                    setMessage(Message('warning', 'O usuário ou senha informados não estão corretos'))\n                }\n            } catch {\n                setMessage(Message('error'))\n            }\n        } else {\n            setMessage(Message('warning'))\n        }\n    };\n\n    return(\n        <div className='page login'>\n            <WhiteCard>\n                <img src={Logo} alt='Logo'/>\n                <h2>Acesse sua Conta</h2>\n                <form className='login__form'>\n                    <InputContainer>\n                        <i className=\"icon ion-md-person\"></i>\n                        Usuário\n                        <input type='text' placeholder='Usuário' value={userData.user} onChange={e => userHandler(e)}/>\n                    </InputContainer>\n                    <InputContainer>\n                        <i className=\"icon ion-md-key\"></i>\n                        Senha\n                        <input type='password' placeholder='Senha' value={userData.password} onChange={e => passwordHandler(e)} />\n                    </InputContainer>\n                    {\n                        message\n                    }\n                    <Button text='Enviar' Action={sendUserData}/>\n                </form>\n            </WhiteCard>\n        </div>\n    );\n};\n\nexport default Login;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Logo from '../assets/img/logo.webp'\nimport BaseUrl from '../components/BaseUrl'\n\nconst Menu = () => {\n\n    const [isVisible, setIsVisible] = useState(false);\n\n    const showMenu = () => {\n        const classes = document.querySelector('.main-menu').classList;\n        const menuButton = document.querySelector('.icon').classList;\n\n        if (isVisible) {\n            setIsVisible(false);\n            if (classes.contains('isVisible')) \n                classes.remove('isVisible');\n\n            classes.add('isNotVisible');\n            menuButton.remove('ion-md-close');\n            menuButton.add('ion-md-menu');\n\n        } else {\n            setIsVisible(true);\n\n            if (classes.contains('isNotVisible'))\n                classes.remove('isNotVisible');\n\n            classes.add('isVisible');\n            menuButton.remove('ion-md-menu');\n            menuButton.add('ion-md-close');\n        }\n    }\n\n    const renderMenu = () => {\n        const isLogged = !!window.localStorage.getItem('user-id');\n    \n        if (isLogged) {\n            const userType = parseInt(window.localStorage.getItem('user-type'));\n\n            if (userType === 0) {\n                return (\n                    <>\n                        <li>\n                            <Link to={BaseUrl.users}>\n                                <i className=\"icon ion-md-person-add\"></i>Usuários\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.students}>\n                                <i className=\"icon ion-md-happy\"></i>Alunos\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.teachers}>\n                                <i className=\"icon ion-md-people\"></i>Professores\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.classes}>\n                                <i className=\"icon ion-md-calendar\"></i>Aulas\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.finances}>\n                                <i className=\"icon ion-md-wallet\"></i>Financeiro\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.logout}>\n                                <i className=\"icon ion-md-power\"></i>Sair\n                            </Link>\n                        </li>\n                    </>\n                )\n            } else if(userType === 1) {\n                return (\n                    <>\n                        <li>\n                            <Link to={BaseUrl.users}>\n                                <i className=\"icon ion-md-person-add\"></i>Usuários\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.students}>\n                                <i className=\"icon ion-md-happy\"></i>Alunos\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.teachers}>\n                                <i className=\"icon ion-md-people\"></i>Professores\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.classes}>\n                                <i className=\"icon ion-md-calendar\"></i>Aulas\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.logout}>\n                                <i className=\"icon ion-md-power\"></i>Sair\n                            </Link>\n                        </li>\n                    </>\n                )\n            } else if (userType === 2) {\n                return (\n                    <>\n                        <li>\n                            <Link to={BaseUrl.myClasses}>\n                                <i className=\"icon ion-md-calendar\"></i>Minhas Aulas\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={BaseUrl.teacherFinances}>\n                                <i className=\"icon ion-md-wallet\"></i>Financeiro\n                            </Link>\n                        </li>\n                        <li> \n                            <Link to={BaseUrl.logout}>\n                                <i className=\"icon ion-md-power\"></i>Sair\n                            </Link>\n                        </li>\n                    </>\n                )\n            } else if (userType === 3) {\n                return(\n                    <>\n                        <li>\n                            <Link to={BaseUrl.myClasses}>\n                                <i className=\"icon ion-md-calendar\"></i>Minhas Aulas\n                            </Link>\n                        </li>\n                        <li> \n                            <Link to={BaseUrl.logout}>\n                                <i className=\"icon ion-md-power\"></i>Sair\n                            </Link>\n                        </li>\n                    </>\n                )\n            }\n        }\n    }\n\n    return(\n        <nav className='main-nav'>\n            <i className=\"icon ion-md-menu\" onClick={showMenu}></i>\n            <img src={Logo} alt='Logo'/>\n            <ul className='main-menu'>\n            {\n                renderMenu()\n            }                \n            </ul>\n        </nav>\n    );\n};\n\nexport default Menu;\n","import React from 'react';\nimport WhiteCard from './WhiteCard';\n\nconst PageTitle = props => {\n\n    return(\n        <WhiteCard extraClasses='page-title'>\n            <h2>{props.title}</h2>\n        </WhiteCard>\n    );\n};\n\nexport default PageTitle;\n","import React from 'react';\n\nconst List = props => {\n    \n    const extraClasses = props.extraClasses ? props.extraClasses : '';\n    \n    return(\n        <ul className={`list ${extraClasses}`}>\n            {props.children}\n        </ul>\n    );\n};\n\nexport default List;\n","import React, { useEffect, useState } from 'react';\nimport Api from '../services/api';\nimport List from './List';\n\nconst UsersList = () => {\n\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        const getUsers = async () => {\n            let res = await Api.get('/users');\n            setUsers(res.data);\n        };\n\n        getUsers();\n    }, []);\n\n    const renderUserType = type => {\n        let userType;\n\n        switch (type){\n            case '0':\n                userType = 'Administrador';\n            break;\n            case '1':\n                userType = 'Usuário';\n            break;\n            case '2':\n                userType = 'Professor';\n            break;\n            case '3':\n                userType = 'Aluno';\n            break;\n            default:\n                userType = '';\n            break;\n        }\n\n        return userType;\n    }\n\n    return(\n        <>\n            <List extraClasses='header'>\n                <li className='short'>Id</li>\n                <li className='long'>Nome</li>\n                <li className='long'>Sobrenome</li>\n                <li>Usuário</li>\n                <li>Tipo</li>\n            </List>\n            {\n                users.map(el => {\n                    return(\n                        <List key={el.id}>\n                            <li className='short'>{el.id}</li>\n                            <li className='long'>{el.first_name}</li>\n                            <li className='long'>{el.last_name}</li>\n                            <li>{el.username}</li>\n                            <li>{ renderUserType(el.type) }</li>\n                        </List>\n                    );\n                })\n            }\n        </>\n    );\n\n};\n\nexport default UsersList;\n","import React, { useState } from 'react';\nimport Menu from '../../components/Menu';\nimport PageTitle from '../../components/PageTitle';\nimport WhiteCard from '../../components/WhiteCard';\nimport InputContainer from '../../components/InputContainer';\nimport Button from '../../components/Button';\nimport UsersList from '../../components/UsersList';\nimport Api from '../../services/api';\nimport validateFields from '../../functions/validateFields';\nimport Loading from '../../components/Loading';\nimport Message from '../../functions/Message';\n\nconst Users = () => {\n    const [message, setMessage] = useState('');\n    const [userData, setUserData] = useState({\n        first_name: '', \n        last_name: '', \n        type: 0, \n        username: '', \n        password: ''\n    });\n\n    const nameHandler = e => {\n        setUserData({...userData, first_name: e.target.value});\n    };\n\n    const lastNameHandler = e => {\n        setUserData({...userData, last_name: e.target.value});\n    };\n\n    const typeHandler = e => {\n        setUserData({...userData, type: parseInt(e.target.value)});\n    };\n\n    const userNameHandler = e => {\n        setUserData({...userData, username: e.target.value});\n    };\n\n    const passwordHandler = e => {\n        setUserData({...userData, password: e.target.value});\n    };\n\n    const saveUser = async () => {\n        \n        setMessage(<Loading />);\n        let displayMessage;\n\n        if (validateFields(userData)) {\n            const body = JSON.stringify(userData);\n            \n            try{\n                await Api.post('/users', body);\n\n                displayMessage = Message('success');\n                setMessage(displayMessage);\n            } catch {\n                displayMessage = Message('error');\n                setMessage(displayMessage);\n            }\n\n        } else {\n            displayMessage = Message('warning');\n            setMessage(displayMessage);\n        }\n    }\n\n    return(\n        <section className='page'>\n            <Menu />\n            <PageTitle title='Usuários' />\n            <WhiteCard extraClasses='full-page'>\n                <h2>Todos Usuários</h2>\n                <UsersList />\n            </WhiteCard>\n            <WhiteCard>\n                <h2>Cadastrar Usuário</h2>\n                <InputContainer>\n                    Nome\n                    <input type='text' placeholder='Nome' onChange={e => nameHandler(e)} />\n                </InputContainer>\n                <InputContainer>\n                    Sobrenome\n                    <input type='text' placeholder='Sobrenome' onChange={e => lastNameHandler(e)} />\n                </InputContainer>\n                <InputContainer>\n                    Tipo de usuário\n                    <select onChange={e => typeHandler(e)}>\n                        <option value=\"0\">Administrador</option>\n                        <option value=\"1\">Usuário</option>\n                    </select>\n                </InputContainer>\n                <InputContainer>\n                    Usuário\n                    <input type='text' placeholder='Usuário' onChange={e => userNameHandler(e)}/>\n                </InputContainer>\n                <InputContainer>\n                    Senha\n                    <input type='password' placeholder='Senha' onChange={e => passwordHandler(e)} />\n                </InputContainer>\n                {\n                    message\n                }\n                <Button text='Enviar' Action={saveUser}/>\n            </WhiteCard>\n        </section>\n    );\n};\n\nexport default Users;","import React from 'react';\nimport InputContainer from './InputContainer';\n\nconst SubjectSelect = props => {\n\n    const renderSubjects = () => {\n        let subjects = '';\n\n        if (props.subjects) {\n            subjects = props.subjects.map(el => <option key={el.id} value={el.id}>{el.name}</option>)\n        }\n\n        return subjects;\n    }\n\n    return(\n        <InputContainer>\n            Matéria\n            <select onChange={props.change}>\n                {\n                    renderSubjects()\n                }\n            </select>\n        </InputContainer>\n    );\n};\n\nexport default SubjectSelect;\n","import React from 'react';\nimport InputContainer from './InputContainer';\n\nconst TeacherSelect = props => {\n\n    const renderTeachers = () => {\n        let teachers = '';\n\n        if (props.teachers) {\n            teachers = props.teachers.map(el => <option key={el.id} value={el.id}>{el.first_name} {el.last_name}</option>)\n        }\n\n        return teachers;\n    }\n\n    return(\n        <InputContainer>\n            Professor\n            <select onChange={props.change}>\n                {\n                    renderTeachers()\n                }\n            </select>\n        </InputContainer>\n    );\n};\n\nexport default TeacherSelect;\n","import React from 'react';\nimport InputContainer from './InputContainer';\n\nconst ClassroomSelect = props => {\n\n    const renderClassrooms = () => {\n        let classrooms = '';\n\n        if (props.classrooms.length)\n            classrooms = props.classrooms.map(el => <option key={el.id}>{el.name}</option>)\n\n        return classrooms;\n    }\n\n    return(\n        <InputContainer>\n            Sala de aula\n            <select onChange={props.change}>\n                {\n                    renderClassrooms()\n                }\n            </select>\n        </InputContainer>\n    );\n};\n\nexport default ClassroomSelect;\n","import React from 'react';\nimport InputContainer from './InputContainer';\n\nconst StudentSelect = props => {\n\n    const renderStudents = () => {\n        let students = '';\n\n        if (props.students) {\n            students = props.students.map(el => <option key={el.id}>{el.first_name} {el.last_name}</option>)\n        }\n\n        return students;\n    }\n\n    return(\n        <InputContainer>\n            Aluno\n            <select onChange={props.change}>\n                {\n                    renderStudents()\n                }\n            </select>\n        </InputContainer>\n    );\n};\n\nexport default StudentSelect;\n","import React from 'react';\nimport List from './List';\nimport WhiteCard from './WhiteCard';\nimport Api from '../services/api';\n\nconst ClassesList = props => {\n\n    const updateStatus = async (e, id) => {\n        const select = e.target;\n        await Api.get(`/classes/${id}/${select.value}`);\n\n        if (select.value === '0') {\n            select.parentNode.classList.remove('confirmed')\n            select.parentNode.classList.add('reserved')\n        } else {\n            select.parentNode.classList.remove('reserved')\n            select.parentNode.classList.add('confirmed')\n        }\n    }\n\n    const renderStatusSelect = (status, id) => {\n        let select;\n\n        if (status === '0') {\n            select = <select onChange={e => updateStatus(e, id)}>\n                <option value='0'>Reservada</option>\n                <option value='1'>Confirmada</option>\n            </select>\n        } else if (status === '1') {\n            select = <select onChange={e => updateStatus(e, id)}>\n                <option value='1'>Confirmada</option>\n                <option value='0'>Reservada</option>\n            </select>\n        }\n\n        return select\n    }\n\n    const renderClasses = classroom => {\n        if (props.classes.length) {\n            const classes = props.classes.filter(e => e.classroom === classroom);\n\n            if (classes.length) {\n                let content = classes.map(e => {\n                    const student = props.students.find(student => student.id === e.student)\n                    const teacher = props.teachers.find(teacher => teacher.id === e.teacher)\n                    const subject = props.subjects.find(subject => subject.id === e.subject)\n                    \n                    return (\n                            <List key={e.id}>\n                                <li>{student.first_name} {student.last_name}</li>\n                                <li>{teacher.first_name} {teacher.last_name}</li>\n                                <li>{subject.name}</li>\n                                <li>{e.time}</li>\n                                <li>{e.duration}</li>\n                                <li className={e.status === '0' ? 'reserved' : 'confirmed'}>\n                                    {\n                                        renderStatusSelect(e.status, e.id)\n                                    }  \n                                </li>\n                            </List>\n                    );\n                })\n\n                return content\n            }\n        }\n    }\n\n    const renderClassrooms = () => {\n        if (props.classrooms.length) {\n            let listOfClassrooms;\n\n            listOfClassrooms =  props.classrooms.map(classroom => {\n                return(\n                    <WhiteCard key={classroom.id} extraClasses='full-page'>\n                        <h2>{classroom.name}</h2>\n                        <List extraClasses='header'>\n                            <li>Aluno</li>\n                            <li>Professor</li>\n                            <li>Disciplina</li>\n                            <li>Horário</li>\n                            <li>Duração</li>\n                            <li>Status</li>\n                        </List>\n                        {\n                            renderClasses(classroom.id)\n                        }\n                    </WhiteCard>\n                )\n            })\n\n            return listOfClassrooms\n        } else {\n            return (\n                <WhiteCard extraClasses='full-page'>\n                    <h2>Salas</h2>\n                    <p>Não existem salas de aula cadastradas no momento.</p>\n                </WhiteCard>\n            )\n        }   \n    }\n\n    return(\n        <>\n            {\n                renderClassrooms()\n            }\n        </>\n    )\n};\n\nexport default ClassesList;\n","import React, { useState, useEffect } from 'react';\nimport Menu from '../../components/Menu';\nimport InputContainer from '../../components/InputContainer';\nimport WhiteCard from '../../components/WhiteCard';\nimport SubjectSelect from '../../components/SubjectSelect';\nimport TeacherSelect from '../../components/TeacherSelect';\nimport ClassroomSelect from '../../components/ClassroomSelect';\nimport Button from '../../components/Button';\nimport PageTitle from '../../components/PageTitle';\nimport StudentSelect from '../../components/StudentSelect';\nimport validateFields from '../../functions/validateFields';\nimport ClassesList from '../../components/ClassesList';\nimport Api from '../../services/api';\nimport Message from '../../functions/Message';\nimport Loading from '../../components/Loading';\n\nconst Dashboard = () => {\n\n    /*\n        Getting api data \n    */\n\n    const [students, setStudents] = useState([]);\n    const [teachers, setTeachers] = useState([]);\n    const [classrooms, setClassrooms] = useState([]);\n    const [subjects, setSubjects] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        const firstClassData = {\n            student: '',\n            subject: '',\n            teacher: '',\n            classroom: '',\n            status: 1,\n            schedule: '',\n            time: '',\n            duration: ''\n        }\n\n        const getStudents = async () => {\n            let res = await Api.get('/students');\n            setStudents(res.data);\n            if (res.data.length) {\n                firstClassData.student = parseInt(res.data[0].id)\n                setClassData(firstClassData)   \n            }\n        };\n\n        const getTeachers = async () => {\n            let res = await Api.get('/teachers');\n            setTeachers(res.data);\n            if (res.data.length) {\n                firstClassData.teacher = parseInt(res.data[0].id)\n                setClassData(firstClassData)\n            }\n        };\n\n        const getClassrooms = async () => {\n            let res = await Api.get('/classrooms');\n            setClassrooms(res.data);\n            if (res.data.length) {\n                firstClassData.classroom = parseInt(res.data[0].id)\n                setClassData(firstClassData)\n            }\n        };\n\n        const getSubjects = async () => {\n            let res = await Api.get('/subjects');\n            setSubjects(res.data);\n            if (res.data.length) {\n                firstClassData.subject = parseInt(res.data[0].id)\n                setClassData(firstClassData)\n            }\n        };\n\n        getStudents();\n        getTeachers();\n        getClassrooms();\n        getSubjects();\n        \n    }, []);\n\n    const [currentDate, setCurrentDate] = useState('')\n    const [classes, setClasses] = useState([]);\n    const selectedDateHandler = e => setCurrentDate(e.target.value)\n\n    const getClasses = async () => {\n        let res = await Api.get(`/classes/${currentDate}`);\n        setClasses(res.data);\n    }\n\n    /*\n        Input handlers\n    */\n\n    const [classData, setClassData] = useState({\n        student: '',\n        subject: '',\n        teacher: '',\n        classroom: '',\n        status: 1,\n        schedule: '',\n        time: '',\n        duration: ''\n    });\n\n    const studentHandler = e => {\n        const { id } = students.find(el => `${el.first_name} ${el.last_name}` === e.target.value);\n        setClassData({ ...classData, student: parseInt(id) });\n    }\n\n    const subjectHandler = e => {\n        setClassData({ ...classData, subject: parseInt(e.target.value) });\n    }\n\n    const teacherHandler = e => {\n        const { id } = teachers.find(el => el.id === e.target.value);\n        setClassData({ ...classData, teacher: parseInt(id) });\n    }\n\n    const classroomHandler = e => {\n        const { id } = classrooms.find(el => el.name === e.target.value);\n        setClassData({ ...classData, classroom: parseInt(id) });\n    }\n\n    const scheduleHandler = e => {\n        setClassData({ ...classData, schedule: e.target.value })\n    }\n\n    const timeHandler = e => {\n        setClassData({ ...classData, time: e.target.value })\n    }\n\n    const statusHandler = e =>{\n        setClassData({...classData, status: parseInt(e.target.value)})\n    }\n\n    const durationHandler = e => {\n        setClassData({...classData, duration: e.target.value})\n    }\n\n    const saveClass = async () => {\n        setMessage(<Loading />)\n        \n        if (validateFields(classData)) {\n            const body = JSON.stringify(classData)\n            \n            try{\n                const res = await Api.post('/classes', body)\n                \n                if (res.status === 200) {\n                    setMessage(Message('success'))\n                } else if (res.status === 203) {\n                    setMessage(Message('warning', 'O aluno não possui créditos suficientes.'))\n                }\n            } catch {\n                setMessage(Message('error'))\n            }\n\n        } else {\n            setMessage(Message('warning'))\n        }\n    }\n\n    /*\n        Save Classroom\n    */\n\n    const [classroom, setClassroom] = useState({name: ''})\n    const [newClassroomMessage, setNewClassroomMessage] = useState('')\n\n    const newClassroomHandler = e => setClassroom({name: e.target.value})\n\n    const saveClassroom = async () => {\n\n        setNewClassroomMessage(<Loading />)\n\n        if (classroom.name !== '') {\n            try {\n                const body = JSON.stringify(classroom)\n                await Api.post('/classrooms', body)\n            \n                setNewClassroomMessage(Message('success'))\n            } catch {\n                setNewClassroomMessage(Message('error'))\n            }\n        } else {\n            setNewClassroomMessage(Message('warning', 'Preencha os campos necessários!'))\n        }\n    }\n\n    return (\n        <section className='page'>\n            <Menu />\n            <PageTitle title='Aulas' />\n            <WhiteCard>\n                <InputContainer>\n                    Data\n                    <input type='date' onChange={e => selectedDateHandler(e)} />\n                </InputContainer>\n                <Button Action={getClasses} text='Ver aulas'/>\n            </WhiteCard>\n            <ClassesList\n                classes={classes}\n                classrooms={classrooms}\n                students={students}\n                teachers={teachers}\n                subjects={subjects}\n            />\n            <WhiteCard>\n                <h2>Nova aula</h2>\n                <StudentSelect students={students} change={e => studentHandler(e)} />\n                <SubjectSelect subjects={subjects} change={e => subjectHandler(e)} />\n                <TeacherSelect teachers={teachers} change={e => teacherHandler(e)} />\n                <ClassroomSelect classrooms={classrooms} change={e => classroomHandler(e)} />\n                <InputContainer>\n                    Status\n                    <select onChange={(e => statusHandler(e))}>\n                        <option value=\"1\">Confirmado</option>\n                        <option value=\"0\">Reservado</option>\n                    </select>\n                </InputContainer>\n                <InputContainer>\n                    Data\n                    <input type='date' onChange={e => scheduleHandler(e)} />\n                </InputContainer>\n                <InputContainer>\n                    Hora\n                    <input type='time' onChange={e => timeHandler(e)} />\n                </InputContainer>\n                <InputContainer>\n                    Duração\n                    <input type='time' onChange={e => durationHandler(e)} />\n                </InputContainer>\n                {\n                    message\n                }\n                <Button text=\"Enviar\" Action={saveClass} />\n            </WhiteCard>\n            <WhiteCard>\n                <h2>Cadastrar Sala</h2>\n                <InputContainer>\n                    Sala\n                    <input type='text' placeholder='Sala' onChange={e => newClassroomHandler(e)}/>\n                </InputContainer>\n                {\n                    newClassroomMessage\n                }\n                <Button text='Cadastrar' Action={saveClassroom}/>\n            </WhiteCard>\n        </section>\n    );\n};\n\nexport default Dashboard;\n","const minutesToTime = minutes => {\n\n    let time;\n\n    if (minutes) {\n        let h = Math.floor(minutes/60)\n        let m = minutes % 60\n\n        if (h < 10) \n            h =  `0${h}`\n\n        if (m < 10)\n            m = `0${m}`\n\n\n        time = `${h}:${m}`\n    } else {\n        time = '00:00'\n    }\n\n    return time\n};\n\nexport default minutesToTime;\n","import React from 'react';\nimport List from './List';\nimport WhiteCard from './WhiteCard';\nimport minutesToTime from '../functions/minutesToTime';\n\nconst StudentList = props => {\n\n    const renderStudents = () => {\n        let students\n\n        if (props.students.length) {\n            students = props.students.map(el => {\n\n                return (\n                    <List key={el.id}>\n                        <li className='long'>{el.first_name}</li>\n                        <li className='long'>{el.last_name}</li>\n                        <li className='long'>{el.email}</li>\n                        <li>{el.cellphone}</li>\n                        <li>{minutesToTime(el.credits)}</li>\n                    </List>\n                )\n            })\n        }\n\n        return students\n    }\n\n    return(\n        <>\n            <WhiteCard extraClasses='full-page'>\n                <h2>Alunos</h2>\n                <List extraClasses='header'>\n                    <li className='long'>Nome</li>\n                    <li className='long'>Sobrenome</li>\n                    <li className='long'>Email</li>\n                    <li>Celular</li>\n                    <li>Créditos</li>\n                </List>\n                {\n                    renderStudents()\n                }\n            </WhiteCard>\n        </>\n    );\n};\n\nexport default StudentList;\n","import React, { useState, useEffect } from 'react';\nimport Menu from '../../components/Menu';\nimport PageTitle from '../../components/PageTitle';\nimport WhiteCard from '../../components/WhiteCard';\nimport InputContainer from '../../components/InputContainer';\nimport Button from '../../components/Button';\nimport StudentSelect from '../../components/StudentSelect';\nimport StudentList from '../../components/StudentList';\nimport validateFields from '../../functions/validateFields';\nimport Api from '../../services/api';\nimport Message from '../../functions/Message';\nimport Loading from '../../components/Loading';\n\nconst Students = () => {\n\n    /*\n        Register new student\n    */\n\n    const [newUserMessage, setNewUserMessage] = useState('');\n    const [student, setStudent] = useState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        cellphone: '',\n        username: '',\n        password: ''\n    });\n\n    const firstNameHandler = e => setStudent({ ...student, first_name: e.target.value });\n    const lastNameHandler = e => setStudent({ ...student, last_name: e.target.value });\n    const emailHandler = e => setStudent({ ...student, email: e.target.value });\n    const cellphoneHandler = e => setStudent({ ...student, cellphone: e.target.value });\n    const userHandler = e => setStudent({ ...student, username: e.target.value });\n    const passwordHandler = e => setStudent({ ...student, password: e.target.value });\n\n    const saveStudent = async () => {\n\n        setNewUserMessage(<Loading />)\n\n        if (validateFields(student)) {\n            const body = JSON.stringify(student);\n            \n            try {\n                const res = await Api.post('/students', body)\n\n                if (res.status === 200) {\n                    setNewUserMessage(Message('success'))\n                } else if (res.status === 203) {\n                    setNewUserMessage(Message('warning', 'O nome de usuário já existe!'))\n                }\n            } catch {\n                setNewUserMessage(Message('error'))\n            }            \n        } else {\n            setNewUserMessage(Message('warning'))\n        }\n    }\n\n    /*\n        List users in select input\n    */\n\n    const [students, setStudents] = useState([]);\n    const [activeStudent, setActiveStudent] = useState(0);\n    const [credits, setCredits] = useState('00:00');\n    const [addCreditsMessage, setAddCreditsMessage] = useState('');\n\n    useEffect(() => {\n        const getStudents = async () => {\n            let res = await Api.get('/students');\n            setStudents(res.data);\n            \n            if (res.data.length)\n                setActiveStudent(res.data[0].id);\n        };\n\n        getStudents();\n    }, []);\n\n    const changeStudent = e => {\n        const name = e.target.value;\n        const currentStudent = students.find(el => `${el.first_name} ${el.last_name}` === name);\n        const id = parseInt(currentStudent.id);\n        \n        setActiveStudent(id);\n    }\n\n    const creditsHandler = e => setCredits(e.target.value)\n\n    const addCredits = async () => {\n        setAddCreditsMessage(<Loading />)\n        \n        const data = {\n            id: activeStudent,\n            credits\n        };\n\n        if (validateFields(data)) {\n            const body = JSON.stringify(data);\n        \n            try {\n                await Api.post('/students/credits', body)\n                setAddCreditsMessage(Message('success'))\n            } catch {\n                setAddCreditsMessage(Message('error'))\n            }\n        } else {\n            setAddCreditsMessage(Message('warning'))\n        }                \n    }\n\n\n    return (\n        <section className='page'>\n            <Menu />\n            <PageTitle title='Alunos' />\n            <StudentList students={students} />\n            <WhiteCard>\n                <h2>Cadastrar Aluno</h2>\n                <div>\n                    <InputContainer>\n                        Nome\n                        <input type='text' placeholder='Nome' onChange={e => firstNameHandler(e)} />\n                    </InputContainer>\n                    <InputContainer>\n                        Sobrenome\n                        <input type='text' placeholder='Sobrenome' onChange={e => lastNameHandler(e)} />\n                    </InputContainer>\n                    <InputContainer>\n                        Email\n                        <input type='email' placeholder='Email' onChange={e => emailHandler(e)} />\n                    </InputContainer>\n                    <InputContainer>\n                        Celular\n                        <input type='phone' placeholder='Celular' onChange={e => cellphoneHandler(e)} />\n                    </InputContainer>\n                    <InputContainer>\n                        Usuário\n                        <input type='text' placeholder='Usuário' onChange={e => userHandler(e)} />\n                    </InputContainer>\n                    <InputContainer>\n                        Senha\n                        <input type='password' placeholder='Senha' onChange={e => passwordHandler(e)} />\n                    </InputContainer>\n                    {\n                        newUserMessage\n                    }\n                    <Button text='Cadastrar' Action={saveStudent} />\n                </div>\n            </WhiteCard>\n            <WhiteCard>\n                <h2>Creditar Aluno</h2>\n                <div>\n                    <StudentSelect students={students} change={changeStudent} />\n                    <InputContainer>\n                        Créditos\n                        <input type='time' value={credits} placeholder='Créditos' min='0' onChange={e => creditsHandler(e)}/>\n                    </InputContainer>\n                    {\n                        addCreditsMessage\n                    }\n                    <Button text='Creditar' Action={addCredits}/>\n                </div>\n            </WhiteCard>\n        </section>\n    );\n};\n\nexport default Students;\n","import React, { useState, useEffect} from 'react';\nimport List from './List';\nimport Api from '../services/api';\nimport minutesToTime from '../functions/minutesToTime';\n\nconst TeachersList = () => {\n\n    const [teachers, setTeachers] = useState([]);\n\n    useEffect(() => {\n        const getTeachersList = async () => {\n            let res = await Api.get('/teachers');\n            setTeachers(res.data);\n        }\n\n        getTeachersList();\n    }, []);\n\n    const renderTeachers = () => {\n        let list = '';\n\n        if (teachers.length) {\n            list = teachers.map(el => {\n                return(\n                    <List key={el.id}>\n                        <li className='long'>{el.first_name}</li>\n                        <li className='long'>{el.last_name}</li>\n                        <li className='long'>{el.email}</li>\n                        <li>{minutesToTime(el.credits)}</li>\n                        <li>{el.cellphone}</li>\n                        <li>{el.subject}</li>\n                    </List>\n                )\n            })\n        }\n\n        return list\n    }\n\n    return(\n        <>\n            <List extraClasses='header'>\n                <li className='long'>Nome</li>\n                <li className='long'>Sobrenome</li>\n                <li className='long'>Email</li>\n                <li>Total de Aulas</li>\n                <li>Celular</li>\n                <li>Disciplina</li>\n            </List>\n            {\n               renderTeachers()\n            }\n        </>\n    );\n};\n\nexport default TeachersList;\n","import React, { useState, useEffect } from 'react';\nimport Menu from '../../components/Menu';\nimport PageTitle from '../../components/PageTitle';\nimport WhiteCard from '../../components/WhiteCard';\nimport InputContainer from '../../components/InputContainer';\nimport SubjectSelect from '../../components/SubjectSelect';\nimport Button from '../../components/Button';\nimport validateFields from '../../functions/validateFields';\nimport Api from '../../services/api';\nimport TeachersList from '../../components/TeachersList';\nimport Loading from '../../components/Loading';\nimport Message from '../../functions/Message';\n\nconst Teachers = () => {\n\n    /*\n        OnLoad events\n    */\n\n    const [subjects, setSubjects] = useState([]);\n\n    useEffect(() => {\n        const getSubjects = async () => {\n            const res = await Api.get('/subjects');\n            setSubjects(res.data);\n            \n            if (res.data.length)\n                setTeacherData({...teacherData, subject: res.data[0].id})\n        }\n\n        getSubjects();\n    }, []);\n\n    /*\n        Create new teacher\n    */\n\n    const [newTeacherMessage, setNewTeacherMessage] = useState('');\n    const [newSubjectMessage, setNewSubjectMessage] = useState('');\n    const [teacherData, setTeacherData] = useState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        cellphone: '',\n        subject: '',\n        username: '',\n        password: ''\n    });\n\n    const firstNameHandler = e => setTeacherData({ ...teacherData, first_name: e.target.value });\n    const lastNameHandler = e => setTeacherData({ ...teacherData, last_name: e.target.value });\n    const emailHandler = e => setTeacherData({ ...teacherData, email: e.target.value });\n    const cellphoneHandler = e => setTeacherData({ ...teacherData, cellphone: e.target.value });\n    const subjectHandler = e => setTeacherData({ ...teacherData, subject: e.target.value });\n    const userHandler = e => setTeacherData({ ...teacherData, username: e.target.value });\n    const passwordHandler = e => setTeacherData({ ...teacherData, password: e.target.value });\n\n    const saveTeacher = async () => {\n        setNewTeacherMessage(<Loading />)\n\n        if (validateFields(teacherData)) {\n            const body = JSON.stringify(teacherData);\n\n            try {\n                const res = await Api.post('/teachers', body);\n\n                if (res.status === 200) {\n                    setNewTeacherMessage(Message('success'))\n                } else if (res.status === 203) {\n                    setNewTeacherMessage(Message('warning', 'O usuário já existe!'))\n                }\n            } catch {\n                setNewTeacherMessage(Message('error'))\n            }\n        } else {\n            setNewTeacherMessage(Message('warning'))\n        }\n    }\n\n    /*\n        Create new subject\n    */\n\n    const [subject, setSubject] = useState({ name: '' });\n\n    const saveSubject = async () => {\n\n        setNewSubjectMessage(<Loading />)\n\n        if (subject.name !== '') {\n            const body = JSON.stringify(subject);\n\n            try {\n                await Api.post('/subjects', body);\n                setNewSubjectMessage(Message('success'))\n            } catch {\n                setNewSubjectMessage(Message('error'))\n            }\n\n        } else {\n            setNewSubjectMessage(Message('warning'))\n        }\n    }\n\n    return (\n        <section className='page'>\n            <Menu />\n            <PageTitle title='Professores' />\n            <WhiteCard extraClasses='full-page'>\n                <h2>Professores</h2>\n                <TeachersList />\n            </WhiteCard>\n            <WhiteCard>\n                <h2>Cadastrar Professor</h2>\n                <form>\n                    <InputContainer>\n                        Nome\n                        <input type='text' placeholder='Nome' onChange={e => firstNameHandler(e)} />\n                    </InputContainer>\n                    <InputContainer>\n                        Sobrenome\n                        <input type='text' placeholder='Sobrenome' onChange={e => lastNameHandler(e)} />\n                    </InputContainer>\n                    <InputContainer>\n                        Email\n                        <input type='email' placeholder='Email' onChange={e => emailHandler(e)} />\n                    </InputContainer>\n                    <InputContainer>\n                        Celular\n                        <input type='phone' placeholder='Celular' onChange={e => cellphoneHandler(e)} />\n                    </InputContainer>\n                    <SubjectSelect change={e => subjectHandler(e)} subjects={subjects} />\n                    <InputContainer>\n                        Usuário\n                        <input type='text' placeholder='Usuário' onChange={e => userHandler(e)} />\n                    </InputContainer>\n                    <InputContainer>\n                        Senha\n                        <input type='password' placeholder='Senha' onChange={e => passwordHandler(e)} />\n                    </InputContainer>\n                    {\n                        newTeacherMessage\n                    }\n                    <Button text='Cadastrar' Action={saveTeacher} />\n                </form>\n            </WhiteCard>\n            <WhiteCard>\n                <h2>Disciplinas</h2>\n                <form>\n                    <InputContainer>\n                        Nome\n                        <input type='text' placeholder='Nome' onChange={e => setSubject({ name: e.target.value })} />\n                    </InputContainer>\n                    {\n                        newSubjectMessage\n                    }\n                    <Button text='Adicionar' Action={saveSubject} />\n                </form>\n            </WhiteCard>\n        </section>\n    );\n};\n\nexport default Teachers;","import React from 'react';\n\nconst Modal = props => {\n    return (\n        <div className='modal'>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from 'react';\nimport Menu from '../../components/Menu';\nimport PageTitle from '../../components/PageTitle';\nimport Api from '../../services/api';\nimport WhiteCard from '../../components/WhiteCard';\nimport List from '../../components/List';\nimport InputContainer from '../../components/InputContainer'\nimport Button from '../../components/Button'\nimport Modal from '../../components/Modal'\nimport Loading from '../../components/Loading'\nimport Message from '../../functions/Message'\n\nconst MyClasses = () => {\n\n    /*\n        Get api data\n    */\n\n    const username = window.localStorage.getItem('user-username')\n    const type = parseInt(window.localStorage.getItem('user-type'))\n    const [currentDate, setCurrentDate] = useState('')\n    const [classes, setClasses] = useState([])\n\n    const selectedDateHandler = e => setCurrentDate(e.target.value)\n\n    const getClasses = async (date = currentDate) => {\n        let { data } = await Api.get(`/classes/${type}/${username}/${date}`);\n\n        if (data)\n            setClasses(data);\n    }\n\n    useEffect(() => {\n        getClasses(0);\n    }, [])\n    \n    /*\n        Modal\n    */\n\n    const [isModalVisible, setIsModalVisible] = useState(false)\n    const [currentClass, setCurrentClass] = useState({})\n    const [teacherComment, setTeacherComment] = useState('')\n    const [studentComment, setStudentComment] = useState('')\n    const [commentMessage, setCommentMessage] = useState('')\n\n    useEffect(() => {\n        if (currentClass.student_comments)\n            setStudentComment(currentClass.student_comments)\n\n        if (currentClass.teacher_comments)\n            setTeacherComment(currentClass.teacher_comments)\n\n    }, [currentClass])\n\n    const sendComment = async () => {\n\n        setCommentMessage(<Loading />)\n\n        const body = JSON.stringify({\n            type,\n            id: currentClass.id,\n            comment: type === 2 ? teacherComment : studentComment\n        })\n\n        try {\n            const res = await Api.post(`/classes/comments`, body)\n            setCommentMessage(Message('success'))\n        } catch {\n            setCommentMessage(Message('error'))\n        }        \n    } \n\n    const showModal = () => {\n        const modalScreen = \n            <Modal>\n                <WhiteCard>\n                    <h2>Comentários do aluno</h2>\n                        { type === 3 ?\n                                <>\n                                    <h3>Escreva seu comentário</h3> \n                                    <textarea defaultValue={studentComment} onChange={(e) => setStudentComment(e.target.value)}></textarea>\n                                    {\n                                        commentMessage\n                                    }\n                                    <Button text='Salvar' Action={sendComment}/> \n                                </>\n                            : \n                                <p>{studentComment}</p>\n                        }\n                </WhiteCard>\n                <WhiteCard>\n                    <h2>Comentários do professor</h2>\n                    { type === 2 ? \n                            <>\n                                <h3>Escreva seu comentário</h3>\n                                <textarea defaultValue={teacherComment} onChange={(e) => setTeacherComment(e.target.value)}></textarea> \n                                {\n                                    commentMessage\n                                }\n                                <Button text='Salvar' Action={sendComment}/>\n                            </>\n                        : \n                            <p>{teacherComment}</p>\n                    }\n                </WhiteCard>\n                <Button Action={() => setIsModalVisible(false)} text='Fechar' />\n            </Modal>\n\n        if (currentClass) {\n            return modalScreen\n        } else {\n            return false\n        }\n    }\n\n    const commentsHandler = (isVisible, id) => {\n        setCurrentClass(classes.find(c => c.id === id))\n        setIsModalVisible(isVisible)\n    }\n\n\n    /*\n        Render\n    */\n\n    const renderClasses = () => {\n        let result;\n\n        if (classes.length) {\n            result = classes.map(el => {\n                const date = new Date(el.schedule)\n\n                return(\n                    <List key={el.id}>\n                        <li>{el.first_name} {el.last_name}</li>\n                        <li>{el.subject}</li>\n                        <li>{el.classroom_name}</li>\n                        <li>{date.toLocaleDateString()}</li>\n                        <li>{el.time}</li>\n                        <li>{el.duration}</li>\n                        <li><p onClick={() => commentsHandler(true, el.id)} style={{color: '#2ca17e'}}>Ver</p></li>\n                        <li className={el.status !== '0' ? 'confirmed' : 'reserved'}>{el.status !== '0' ? 'Confirmado' : 'Reservado'}</li>\n                    </List>\n                )\n            })\n        } else {\n            result = <p className='no-data'>Não foram encontrados registros para essa pesquisa</p>\n        }\n\n        return result\n    }\n\n    return(\n        <section className='page'>\n            <Menu />\n            <PageTitle title='Minhas aulas' />\n            <WhiteCard>\n                <InputContainer>\n                    Escolha uma data\n                    <input type='date' onChange={e => selectedDateHandler(e)} />\n                </InputContainer>\n                <Button Action={getClasses} text='Ver aulas'/>\n            </WhiteCard>\n            <WhiteCard extraClasses='full-page'>\n                <h2>Aulas</h2>\n                <List extraClasses='header'>\n                    <li>{ type === 2 ? 'Aluno' : 'Professor'}</li>\n                    <li>Disciplina</li>\n                    <li>Sala</li>\n                    <li>Data</li>\n                    <li>Hora</li>\n                    <li>Duração</li>\n                    <li>Comentários</li>\n                    <li>Status</li>\n                </List>\n                {\n                    renderClasses()\n                }\n            </WhiteCard>\n            {\n                isModalVisible && showModal()\n            }\n        </section>\n    )\n};\n\nexport default MyClasses;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport MyClasses from '../pages/MyClasses';\nimport Users from '../pages/Users';\nimport BaseUrl from '../components/BaseUrl';\n\nconst PrivateRoute = props => {\n    const isLogged = !!window.localStorage.getItem('user-id')\n\n    if (isLogged) {\n        const userType = parseInt(window.localStorage.getItem('user-type'))\n        const level = parseInt(props.level)\n\n        if (props.path === BaseUrl.dashboard) {\n            if (userType > 1) {\n                return <Route {...props} component={MyClasses}/>\n            } else {\n                return <Route {...props} component={Users} />\n            }\n        } else {\n            if (props.type === 'lower') {\n                if (userType <= level) {\n                    return <Route {...props} />\n                } else {\n                    return <Redirect to={BaseUrl.dashboard} />\n                }\n            } else if (props.type === 'greater') {\n                if (userType >= level) {\n                    return <Route {...props} />\n                } else {\n                    return <Redirect to={BaseUrl.dashboard} />\n                }\n            }\n        }\n    } else {\n        return <Redirect to={BaseUrl.home} />\n    }\n};\n\nexport default PrivateRoute;\n","import React  from 'react';\nimport { Redirect } from 'react-router-dom';\nimport BaseUrl from '../components/BaseUrl';\n\nconst Logout = () => {\n    window.localStorage.clear()\n\n    return <Redirect to={BaseUrl.home} />\n};\n\nexport default Logout;\n","const formatDate = d => {\n\n    const a = d.split('-')\n    const f = `${a[2]}/${a[1]}/${a[0]}`\n\n    return f\n}\n\nexport default formatDate;\n","import React, { useEffect, useState } from 'react'\nimport Menu from '../../components/Menu'\nimport PageTitle from '../../components/PageTitle'\nimport WhiteCard from '../../components/WhiteCard'\nimport InputContainer from '../../components/InputContainer'\nimport StudentSelect from '../../components/StudentSelect'\nimport Button from '../../components/Button'\nimport Api from '../../services/api'\nimport Loading from '../../components/Loading'\nimport Message from '../../functions/Message'\nimport validateFields from '../../functions/validateFields'\nimport List from '../../components/List'\nimport TeacherSelect from '../../components/TeacherSelect'\nimport formatDate from '../../functions/formatDate'\n\nconst Finances = () => {\n\n    /*\n        Incomes and outcomes date handlers\n    */\n\n   const [from, setFrom] = useState('')\n   const [to, setTo] = useState('')\n\n    /*\n        Retrieve Api Data\n    */\n\n    const [students, setStudents] = useState([])\n    const [teachers, setTeachers] = useState([])\n    const [incomes, setIncomes] = useState([])\n    const [outcomes, setOutcomes] = useState([])\n    const [totalIncomes, setTotalIncomes] = useState(0)\n    const [totalOutcomes, setTotalOutcomes] = useState(0)\n\n    const getIncomes = async () => {\n        const { data } = await Api.get(`/incomes/${from === '' ? 0 : from}/${to === '' ? 0 : to}`)\n        setIncomes(data)\n    }\n\n    const getOutcomes = async () => {\n        const { data } = await Api.get(`/outcomes/${from === '' ? 0 : from}/${to === '' ? 0 : to}`)\n        setOutcomes(data)\n    }\n\n    const getTotalIncomes = async () => {\n        const { data } = await Api.get(`/incomes/total/${from === '' ? 0 : from}/${to === '' ? 0 : to}`)\n        setTotalIncomes(data.total)\n    }\n\n    const getTotalOutcomes = async () => {\n        const { data } = await Api.get(`/outcomes/total/${from === '' ? 0 : from}/${to === '' ? 0 : to}`)\n        setTotalOutcomes(data.total)\n    }\n\n    useEffect(() => {\n        const getStudents = async () => {\n            const res = await Api.get('/students')\n            if (res.data) {\n                setStudents(res.data)\n                if (res.data.length)\n                    setPaymentData({ ...paymentData, student: parseInt(res.data[0].id) })\n            }\n        }\n\n        const getTeachers = async () => {\n            const { data } = await Api.get('/teachers')\n            if (data) {\n                setTeachers(data)\n                setOutcome({...outcome, teacher: parseInt(data[0].id)})\n            }\n        }\n\n        getStudents()\n        getTeachers()\n        getIncomes()\n        getOutcomes()\n        getTotalIncomes()\n        getTotalOutcomes()\n    }, [])\n\n    /*\n        Render\n    */\n\n    const renderIncomes = () => {\n        let listOfIncomes = ''\n\n        if (incomes && incomes.length) {\n            listOfIncomes = incomes.map(i => {\n                let method\n\n                if (parseInt(i.method) === 1) {\n                    method = 'Dinheiro'\n                } else if (parseInt(i.method) === 2) {\n                    method = 'Cheque'\n                } else if (parseInt(i.method) === 3) {\n                    method = 'Transferência'\n                }\n                \n                return (\n                    <List key={i.id}>\n                        <li>{i.id}</li>\n                        <li>{i.first_name} {i.last_name}</li>\n                        <li>{i.responsible}</li>\n                        <li>{formatDate(i.income_date)}</li>\n                        <li>{method}</li>\n                        <li>{`R$ ${i.amount.replace('.', ',')}`}</li>\n                        <li>{parseInt(i.status) === 1 ? 'Pago' : 'Pendente'}</li>\n                    </List>\n                )\n            })\n        }\n\n        return listOfIncomes\n    }\n\n    const renderOutcomes = () => {\n        let listOfOutcomes = ''\n\n        if (outcomes && outcomes.length) {\n            listOfOutcomes = outcomes.map(i => {\n\n                return (\n                    <List key={i.id}>\n                        <li>{i.id}</li>\n                        <li>{i.first_name} {i.last_name}</li>\n                        <li>{i.hours}</li>\n                        <li>{formatDate(i.payment_date)}</li>\n                        <li>{`R$ ${i.amount.replace('.', ',')}`}</li>\n                    </List>\n                )\n            })\n        }\n\n        return listOfOutcomes\n    }\n\n    /*\n        Create new payment\n    */\n\n    const [paymentMessage, setPaymentMessage] = useState('')\n    const [paymentData, setPaymentData] = useState({\n        student: '',\n        responsible: '',\n        income_date: '',\n        method: 1,\n        amount: '',\n        status: 1\n    })\n\n    const studentHandler = e => setPaymentData({ ...paymentData, student: parseInt(e.target.value) })\n    const responsibleHandler = e => setPaymentData({ ...paymentData, responsible: e.target.value })\n    const incomeDateHandler = e => setPaymentData({ ...paymentData, income_date: e.target.value })\n    const methodHandler = e => setPaymentData({ ...paymentData, method: parseInt(e.target.value) })\n    const amountHandler = e => setPaymentData({ ...paymentData, amount: parseFloat(e.target.value) })\n    const statusHandler = e => setPaymentData({ ...paymentData, status: parseInt(e.target.value) })\n\n    const addPayment = async () => {\n        setPaymentMessage(<Loading />)\n\n        if (validateFields(paymentData)) {\n            try {\n                const body = JSON.stringify(paymentData)\n                await Api.post('/incomes', body)\n\n                setPaymentMessage(Message('success'))\n            } catch {\n                setPaymentMessage(Message('error'))\n            }\n        } else {\n            setPaymentMessage(Message('warning'))\n        }\n    }\n\n    /*\n        Pay teacher\n    */\n\n    const [outcomeMessage, setOutcomeMessage] = useState('')\n    const [outcome, setOutcome] = useState({\n        teacher: '',\n        hours: '',\n        payment_date: '',\n        amount: 0\n    })\n\n    const paidTeacherHandler = e => setOutcome({...outcome, teacher: parseInt(e.target.value)})\n    const paidHoursHandler = e => setOutcome({...outcome, hours: e.target.value})\n    const paymentDateHandler = e => setOutcome({...outcome, payment_date: e.target.value})\n    const paidAmountHandler = e => setOutcome({...outcome, amount: parseFloat(e.target.value)})\n\n    const payTeacher = async () => {\n        setOutcomeMessage(<Loading />)\n\n        if (validateFields(outcome)) {\n            try {\n                const body = JSON.stringify(outcome)\n                await Api.post('/outcomes', body)\n\n                setOutcomeMessage(Message('success'))\n            } catch {\n                setOutcomeMessage(Message('error'))\n            }\n        } else {\n            setOutcomeMessage(Message('warning'))\n        }\n    }\n\n    return (\n        <section className='page'>\n            <Menu />\n            <PageTitle title='Financeiro' />\n            <WhiteCard extraClasses='full-page flex'>\n                <InputContainer>\n                    Selecione uma data de início\n                    <input type='date' onChange={e => setFrom(e.target.value)} />\n                </InputContainer>\n                <InputContainer>\n                    Selecione uma data final\n                    <input type='date' onChange={e => setTo(e.target.value)} />\n                </InputContainer>\n                <Button text='Ver Pagamentos' Action={() => {getIncomes(); getOutcomes(); getTotalIncomes(); getTotalOutcomes()}} />\n            </WhiteCard>\n            <WhiteCard extraClasses='full-page'>\n                <InputContainer>\n                    <p>Total de entradas: {`R$ ${totalIncomes ? totalIncomes.replace('.', ',') : '0,00'}`}</p>\n                </InputContainer>\n            </WhiteCard>\n            <WhiteCard extraClasses='full-page'>\n                <h2>Entradas</h2>\n                <List extraClasses='header'>\n                    <li>Id</li>\n                    <li>Aluno</li>\n                    <li>Responsável</li>\n                    <li>Data</li>\n                    <li>Método</li>\n                    <li>Valor</li>\n                    <li>Status</li>\n                </List>\n                {\n                    renderIncomes()\n                }\n            </WhiteCard>\n            <WhiteCard extraClasses='full-page'>\n                <InputContainer>\n                    <p>Total de saídas: {`R$ ${ totalOutcomes ? totalOutcomes.replace('.', ',') : '0,00'}`}</p>\n                </InputContainer>\n            </WhiteCard>\n            <WhiteCard extraClasses='full-page'>\n                <h2>Saídas</h2>\n                <List extraClasses='header'>\n                    <li>Id</li>\n                    <li>Professor</li>\n                    <li>Horas Pagas</li>\n                    <li>Data do Pagamento</li>\n                    <li>Valor</li>\n                </List>\n                {\n                    renderOutcomes()\n                }\n            </WhiteCard>\n            <WhiteCard>\n                <h2>Adicionar entrada</h2>\n                <StudentSelect students={students} change={e => studentHandler(e)} />\n                <InputContainer>\n                    Responsável\n                    <input type='text' placeholder='Responsável' onChange={e => responsibleHandler(e)}/>\n                </InputContainer>\n                <InputContainer>\n                    Data\n                    <input type='date' onChange={e => incomeDateHandler(e)} />\n                </InputContainer>\n                <InputContainer>\n                    Forma de pagamento\n                    <select onChange={e => methodHandler(e)}>\n                        <option value='1'>Dinheiro</option>\n                        <option value='2'>Cheque</option>\n                        <option value='3'>Transferência</option>\n                    </select>\n                </InputContainer>\n                <InputContainer>\n                    Valor\n                    <input type='number' placeholder='Valor' step='0.01' onChange={e => amountHandler(e)} />\n                </InputContainer>\n                <InputContainer>\n                    Status\n                    <select onChange={e => statusHandler(e)}>\n                        <option value='1'>Pago</option>\n                        <option value='2'>Pendente</option>\n                    </select>\n                </InputContainer>\n                {\n                    paymentMessage\n                }\n                <Button Action={addPayment} text='Adicionar' />\n            </WhiteCard>\n            <WhiteCard>\n                <h2>Adicionar saída</h2>\n                <TeacherSelect teachers={teachers} change={e => paidTeacherHandler(e)} />\n                <InputContainer>\n                    Horas a pagar\n                    <input type='time' onChange={e => paidHoursHandler(e)} />\n                </InputContainer>\n                <InputContainer>\n                    Data do pagamento\n                    <input type='date' onChange={e => paymentDateHandler(e)} />\n                </InputContainer>\n                <InputContainer>\n                    Valor\n                    <input type='number' step='0.01' onChange={e => paidAmountHandler(e)} />\n                </InputContainer>\n                {\n                    outcomeMessage\n                }\n                <Button Action={payTeacher} text='Pagar'/>\n            </WhiteCard>\n        </section>\n    )\n};\n\nexport default Finances;\n","import React, { useState, useEffect } from 'react';\nimport Menu from '../../components/Menu'\nimport PageTitle from '../../components/PageTitle'\nimport Api from '../../services/api'\nimport WhiteCard from '../../components/WhiteCard';\nimport List from '../../components/List';\nimport InputContainer from '../../components/InputContainer';\nimport Button from '../../components/Button';\nimport formatDate from '../../functions/formatDate'\n\nconst TeacherFinances = () => {\n\n    const [payments, setPayments] = useState([])\n    const [total, setTotal] = useState(0)\n\n    /*\n        Incomes and outcomes date handlers\n    */\n\n    const [from, setFrom] = useState('')\n    const [to, setTo] = useState('')\n    const username = window.localStorage.getItem('user-username')\n\n    const getPayments = async () => {\n        const { data } = await Api.get(`/payments/${username}/${from === '' ? 0 : from}/${to === '' ? 0 : to}`)\n        setPayments(data)\n    }\n\n    const getPaymentsTotal = async () => {\n        const { data } = await Api.get(`/payments/total/${username}/${from === '' ? 0 : from}/${to === '' ? 0 : to}`)\n        setTotal(data.total)\n    }\n\n    useEffect(() => {\n        getPayments()\n        getPaymentsTotal()\n    }, [])\n\n    const renderPayments = () => {\n        let listOfPayments = ''\n\n        if (payments && payments.length) {\n            listOfPayments = payments.map(p => {\n\n                return (\n                    <List key={p.id}>\n                        <li>{p.id}</li>\n                        <li>{p.first_name} {p.last_name}</li>\n                        <li>{p.hours}</li>\n                        <li>{formatDate(p.payment_date)}</li>\n                        <li>{`R$ ${p.amount.replace('.', ',')}`}</li>\n                    </List>\n                )\n            })\n        }\n\n        return listOfPayments\n    }\n\n    return (\n        <section className='page'>\n            <Menu />\n            <PageTitle title='Finanças' />\n            <WhiteCard extraClasses='full-page flex'>\n                <InputContainer>\n                    Selecione uma data de início\n                    <input type='date' onChange={e => setFrom(e.target.value)} />\n                </InputContainer>\n                <InputContainer>\n                    Selecione uma data final\n                    <input type='date' onChange={e => setTo(e.target.value)} />\n                </InputContainer>\n                <Button text='Ver Pagamentos' Action={() => { getPayments(); getPaymentsTotal()}} />\n            </WhiteCard>\n            <WhiteCard extraClasses='full-page'>\n                <InputContainer>\n                    <p>Valor Total Recebido: R$ {total ? total.replace('.', ',') : '0,00'}</p>\n                </InputContainer>\n            </WhiteCard>\n            <WhiteCard extraClasses='full-page'>\n                <h2>Pagamentos Recebidos</h2>\n                <List extraClasses='header'>\n                    <li>Id</li>\n                    <li>Professor</li>\n                    <li>Horas pagas</li>\n                    <li>Data do pagamento</li>\n                    <li>Valor Recebido</li>\n                </List>\n                {\n                    renderPayments()\n                }\n            </WhiteCard>\n        </section>\n    )\n};\n\nexport default TeacherFinances;\n","import React from 'react';\nimport { Router, Route, Switch} from 'react-router-dom';\nimport Login from './pages/Login';\nimport Users from './pages/Users';\nimport Classes from './pages/Classes';\nimport Students from './pages/Students';\nimport Teachers from './pages/Teachers';\nimport MyClasses from './pages/MyClasses';\nimport History from './components/History';\nimport PrivateRoute from './components/PrivateRouter';\nimport Logout from './components/Logout';\nimport BaseUrl from './components/BaseUrl';\nimport Finances from './pages/Finances';\nimport TeacherFinances from './pages/Finances/TeacherFinances';\n\nconst Routes = () => {\n    return(\n        <Router history={History}>\n            <Switch>\n                <Route exact path={BaseUrl.home} component={Login} />\n                <PrivateRoute exact path={BaseUrl.dashboard} level='0' type='greater'/>\n                <PrivateRoute exact path={BaseUrl.classes} component={Classes} level='1' type='lower'/>\n                <PrivateRoute exact path={BaseUrl.students} component={Students} level='1' type='lower'/>\n                <PrivateRoute exact path={BaseUrl.teachers} component={Teachers} level='1' type='lower' />\n                <PrivateRoute exact path={BaseUrl.users} component={Users} level='1' type='lower'/>\n                <PrivateRoute exact path={BaseUrl.myClasses} component={MyClasses} level='2' type='greater'/>\n                <PrivateRoute exact path={BaseUrl.finances} component={Finances} level='0' type='lower' />\n                <PrivateRoute exact path={BaseUrl.teacherFinances} component={TeacherFinances} level ='3' type='lower' />\n                <Route exact path={BaseUrl.logout} component={Logout} />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './Routes';\n\nconst App = () => {\n    return <Routes />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/scss/style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}